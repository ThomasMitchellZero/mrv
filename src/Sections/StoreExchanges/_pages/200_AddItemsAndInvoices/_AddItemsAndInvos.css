.STRX_top .addItemsAndInvos {
  /* ---- Entry Panels ---- */
  & .allEntry30 {
    & .tabBox {
      display: flex;
      flex-direction: row;
      flex: 0 0 auto;
      width: 100%;
    }
  }

  & .inputSection {
    display: flex;
    flex-direction: column;
    flex: 0 0 auto;
    width: 100%;
    gap: 1rem;
    padding: 2rem 0rem;

    & .inputRow {
      display: flex;
      flex-direction: row;
      flex: 0 0 auto;
      width: 100%;
      gap: 1rem;
      justify-content: right;
    }
  }

  & .noneScanned {
    display: flex;
    flex: 1 1 0rem;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;

    & img {
      height: 8rem;
    }
  }

  & .itemsList {
    display: flex;
    flex-direction: column;
    flex: 1 1 0rem;
    width: 100%;
    gap: 1rem;
    padding: 1rem 0rem;

    & .itemCard {
      display: grid;
      grid-template-columns:
        [detail] 1fr
        [totalQty] 8rem
        [receipt] 9rem
        [unitQty] 2.5rem
        [unitPrice] 8rem
        [totalPrice] 10rem
        [spacer] 1px
        [trash] 5.5rem;
      flex: 0 0 auto;
      width: 100%;
      gap: 1rem;
      padding: 1rem 0rem;
    }

    /* 1 per individual item in the card.  Main and child are the same. */
    & .itemRow {
      display: grid;
      grid-template-columns: subgrid;
      grid-column: detail / spacer;
      width: 100%;
      gap: 1rem;
      color: var(--color__primary);
      align-items: flex-start;

      & .invoInfo {
        display: grid;
        grid-column: receipt / span 4;
        grid-template-columns: subgrid;

        & div {
          display: flex;
          flex-direction: row;
        }

        & .invoInfoRow {
          display: grid;
          grid-column: receipt / span 4;
          grid-template-columns: subgrid;
          align-items: center;
        }
      }

      & .detailCol {
        grid-column: detail / span 1;
      }

      & .totalQtyCol {
        grid-column: totalQty / span 1;
      }

      & .receiptCol {
        grid-column: receipt / span 1;
      }

      & .unitQtyCol {
        grid-column: unitQty / span 1;
      }

      & .unitPriceCol {
        grid-column: unitPrice / span 1;
        justify-content: flex-end;
      }

      & .totalPriceCol {
        grid-column: totalPrice / span 1;
        justify-content: flex-end;
      }

      & .fullInfoCol {
        grid-column: receipt / span 4;
      }

      & .spacerCol {
        grid-column: spacer / span 1;
      }
      & .deleteCol {
        grid-column: trash / span 1;
      }
    }
  }
}

/* // .totalPriceCol deleteCol */
